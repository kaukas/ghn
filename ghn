#!/usr/bin/env bash

set -euo pipefail

events=$(
  # cat /tmp/all-notifications |
  hub api notifications --obey-ratelimit -XGET --field all=true |
    jq -r '
      .[] |
      [.subject.url, .updated_at, .subject.type, .unread, .reason, .repository.owner.login, .repository.name, .subject.title] |
      join("|")' |
    sort -t'|' -k4,4 -k2,2 -r
)
event_id=$(
  awk -F '|' '
    function green(s) {
      return "\033[0;32m" s "\033[0m"
    }
    function blue(s) {
      return "\033[0;34m" s "\033[0m"
    }
    function format_owner_repo(owner, repo, max_len) {
      owner_min_len = 5
      total_length = length(owner "/" repo)
      len_diff = total_length - max_len

      sub_from_owner = length(owner) - owner_min_len
      if (len_diff < sub_from_owner) {
        sub_from_owner = len_diff
      }
      owner = substr(owner, 0, length(owner) - sub_from_owner)
      len_diff = len_diff - sub_from_owner

      repo = substr(repo, 0, length(repo) - len_diff)

      return owner "/" repo
    }

    {
      url_parts_size = split($1, url, "/")
      id = "#" url[url_parts_size]
      printf green("%7s "), id

      if ($4 == "true") {
        printf blue("• ")
      } else {
        printf "  "
      }

      if ($3 == "PullRequest") {
        printf "⤽ "
      } else if ($3 == "Issue") {
        printf "! "
      }

      printf green("%-18s "), format_owner_repo($6, $7, 18)
      printf blue("@%s  "), $5
      printf "%s ", $8

      printf "\n"
    }' <<<$events |
    fzf --reverse --ansi |
    awk '
    {
      id = substr($1, 2, 999)
      printf id
    }'
)
event_endpoint=$(
  awk -F '|' -v event_id=$event_id '
  $1 ~ "/" event_id "$" {
    split($1, parts, "api.github.com")
    printf parts[2]
  }' <<<$events
)
event_html_url=$(
  hub api "$event_endpoint" |
    jq -r '.html_url'
)
firefox-container --name Work "$event_html_url"
